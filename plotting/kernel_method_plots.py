from matplotlib import pyplot as plt

import numpy as np

""" Note, these are precomputed arrays that can be used for plotting. """

chi2 = [4.821428571428571508e-01, 5.571428571428571619e-01, 6.128571428571428781e-01, 6.442857142857143504e-01, 6.728571428571429314e-01, 6.971428571428571752e-01, 7.142857142857143016e-01, 7.357142857142857650e-01, 7.492857142857143327e-01, 7.635714285714285676e-01, 7.728571428571429092e-01, 7.821428571428572507e-01, 7.871428571428572551e-01, 7.964285714285714857e-01, 8.057142857142858272e-01, 8.100000000000001643e-01, 8.142857142857145014e-01, 8.192857142857145059e-01, 8.228571428571430646e-01, 8.321428571428572951e-01, 8.371428571428572996e-01, 8.392857142857144126e-01, 8.442857142857144170e-01, 8.478571428571429758e-01, 8.514285714285715345e-01, 8.528571428571429802e-01, 8.557142857142858716e-01, 8.585714285714287630e-01, 8.614285714285716544e-01, 8.642857142857145458e-01, 8.664285714285716589e-01, 8.692857142857145503e-01, 8.714285714285716633e-01, 8.750000000000002220e-01, 8.764285714285716677e-01, 8.771428571428573351e-01, 8.792857142857144481e-01, 8.807142857142858938e-01, 8.835714285714287852e-01, 8.842857142857144526e-01, 8.842857142857144526e-01, 8.864285714285715656e-01, 8.878571428571430113e-01, 8.885714285714286786e-01, 8.921428571428572374e-01, 8.942857142857143504e-01, 8.964285714285714635e-01, 8.985714285714285765e-01, 9.007142857142856895e-01, 9.021428571428571352e-01]

cosine = [4.757142857142857006e-01, 5.507142857142857117e-01, 6.049999999999999822e-01, 6.350000000000000089e-01, 6.700000000000000400e-01, 6.900000000000000577e-01, 7.107142857142857428e-01, 7.257142857142857562e-01, 7.421428571428572152e-01, 7.507142857142857784e-01, 7.592857142857143415e-01, 7.671428571428572374e-01, 7.735714285714286875e-01, 7.814285714285715834e-01, 7.942857142857144837e-01, 8.014285714285716011e-01, 8.100000000000001643e-01, 8.171428571428572818e-01, 8.242857142857143993e-01, 8.271428571428572907e-01, 8.300000000000001821e-01, 8.371428571428572996e-01, 8.385714285714287453e-01, 8.442857142857144170e-01, 8.500000000000000888e-01, 8.507142857142857562e-01, 8.535714285714286476e-01, 8.557142857142857606e-01, 8.585714285714286520e-01, 8.592857142857143193e-01, 8.635714285714286564e-01, 8.642857142857143238e-01, 8.685714285714286609e-01, 8.721428571428572196e-01, 8.735714285714286653e-01, 8.757142857142857784e-01, 8.771428571428572241e-01, 8.800000000000001155e-01, 8.807142857142857828e-01, 8.814285714285714501e-01, 8.835714285714285632e-01, 8.842857142857142305e-01, 8.864285714285713436e-01, 8.892857142857142350e-01, 8.907142857142856807e-01, 8.921428571428571264e-01, 8.957142857142856851e-01, 8.978571428571427981e-01, 8.999999999999999112e-01, 9.007142857142855785e-01]

laplace = [4.721428571428571419e-01, 5.478571428571428203e-01, 5.985714285714285321e-01, 6.371428571428571219e-01, 6.614285714285713658e-01, 6.878571428571428337e-01, 7.028571428571428470e-01, 7.207142857142857517e-01, 7.378571428571428781e-01, 7.507142857142857784e-01, 7.592857142857143415e-01, 7.735714285714285765e-01, 7.842857142857142527e-01, 7.899999999999999245e-01, 7.978571428571428203e-01, 7.999999999999999334e-01, 8.057142857142856052e-01, 8.121428571428570553e-01, 8.228571428571427315e-01, 8.264285714285712903e-01, 8.292857142857141817e-01, 8.342857142857141861e-01, 8.385714285714285232e-01, 8.421428571428570820e-01, 8.449999999999999734e-01, 8.492857142857143105e-01, 8.535714285714286476e-01, 8.564285714285715390e-01, 8.592857142857144304e-01, 8.600000000000000977e-01, 8.642857142857144348e-01, 8.664285714285715478e-01, 8.685714285714286609e-01, 8.707142857142857739e-01, 8.714285714285714413e-01, 8.742857142857143327e-01, 8.764285714285714457e-01, 8.778571428571428914e-01, 8.792857142857143371e-01, 8.807142857142857828e-01, 8.835714285714286742e-01, 8.850000000000001199e-01, 8.871428571428572329e-01, 8.878571428571429003e-01, 8.907142857142857917e-01, 8.942857142857143504e-01, 8.950000000000000178e-01, 8.950000000000000178e-01, 8.957142857142856851e-01, 8.957142857142856851e-01]

poly = [3.635714285714285454e-01, 4.621428571428571330e-01, 5.071428571428571175e-01, 5.399999999999999245e-01, 5.721428571428570642e-01, 6.007142857142856451e-01, 6.221428571428571086e-01, 6.428571428571427937e-01, 6.549999999999999156e-01, 6.714285714285713746e-01, 6.849999999999999423e-01, 6.985714285714285099e-01, 7.092857142857141861e-01, 7.249999999999998668e-01, 7.342857142857142083e-01, 7.421428571428571042e-01, 7.514285714285713347e-01, 7.614285714285713436e-01, 7.678571428571427937e-01, 7.742857142857142438e-01, 7.807142857142856940e-01, 7.864285714285713658e-01, 7.921428571428570375e-01, 7.971428571428570420e-01, 8.014285714285713791e-01, 8.057142857142857162e-01, 8.085714285714286076e-01, 8.142857142857142794e-01, 8.185714285714286165e-01, 8.264285714285715123e-01, 8.307142857142858494e-01, 8.335714285714287408e-01, 8.350000000000001865e-01, 8.378571428571430779e-01, 8.385714285714287453e-01, 8.428571428571430824e-01, 8.464285714285716411e-01, 8.478571428571430868e-01, 8.500000000000001998e-01, 8.535714285714287586e-01, 8.571428571428573173e-01, 8.585714285714287630e-01, 8.614285714285716544e-01, 8.635714285714287675e-01, 8.642857142857144348e-01, 8.657142857142858805e-01, 8.678571428571429935e-01, 8.692857142857144392e-01, 8.714285714285715523e-01, 8.735714285714286653e-01]

baseline = [0.47,       0.54571429, 0.59642857, 0.63928571, 0.66857143, 0.69285714,
 0.71142857 ,0.72357143, 0.73714286, 0.74928571 ,0.75857143, 0.76785714,
 0.77714286, 0.785  ,    0.79071429, 0.79857143 ,0.80642857 ,0.81571429,
 0.82285714, 0.83214286 ,0.835  ,    0.83714286, 0.84  ,     0.84285714,
 0.84785714, 0.85285714, 0.85642857, 0.85928571 ,0.86071429, 0.86357143,
 0.86785714, 0.86928571 ,0.86928571 ,0.87142857, 0.87214286 ,0.87214286,
 0.87285714, 0.875  ,    0.87785714 ,0.88071429, 0.88214286, 0.885,
 0.88714286, 0.88928571, 0.89071429, 0.89071429, 0.89142857, 0.89357143,
 0.89428571, 0.89785714]

#sigmoid = [3.635714285714285454e-01, 4.621428571428571330e-01, 5.071428571428571175e-01, 5.399999999999999245e-01, 5.721428571428570642e-01, 6.007142857142856451e-01, 6.221428571428571086e-01, 6.428571428571427937e-01, 6.549999999999999156e-01, 6.714285714285713746e-01, 6.849999999999999423e-01, 6.985714285714285099e-01, 7.092857142857141861e-01, 7.249999999999998668e-01, 7.342857142857142083e-01, 7.421428571428571042e-01, 7.514285714285713347e-01, 7.614285714285713436e-01, 7.678571428571427937e-01, 7.742857142857142438e-01, 7.807142857142856940e-01, 7.864285714285713658e-01, 7.921428571428570375e-01, 7.971428571428570420e-01, 8.014285714285713791e-01, 8.057142857142857162e-01, 8.085714285714286076e-01, 8.142857142857142794e-01, 8.185714285714286165e-01, 8.264285714285715123e-01, 8.307142857142858494e-01, 8.335714285714287408e-01, 8.350000000000001865e-01, 8.378571428571430779e-01, 8.385714285714287453e-01, 8.428571428571430824e-01, 8.464285714285716411e-01, 8.478571428571430868e-01, 8.500000000000001998e-01, 8.535714285714287586e-01, 8.571428571428573173e-01, 8.585714285714287630e-01, 8.614285714285716544e-01, 8.635714285714287675e-01, 8.642857142857144348e-01, 8.657142857142858805e-01, 8.678571428571429935e-01, 8.692857142857144392e-01, 8.714285714285715523e-01, 8.735714285714286653e-01]


fig, ax = plt.subplots()

for graph, name in zip([chi2, cosine, laplace, poly], [f'$chi^2$', f'cosine', f'laplace', f'polynomial']):
    ax.plot(graph[:10], '-.', label=name)

ax.set_xlabel('n')
ax.set_ylabel(r'$P(Rank)\leq n$')
ax.set_title('CMC for Kernel Methods')
ax.set_xlim(xmin=0)
ax.grid()

ax.plot(baseline[:10], '.r', label=f'baseline')

ax.annotate(f'Rank-1\n$chi^2 = 48.21\%$', xy=(0, 0.47), xytext=(3.4, 0.4),
            arrowprops=dict(facecolor='black', shrink=0.1),
            )
ax.annotate(f'Rank-10\n$chi^2 = 90.21\%$', xy=(9, 0.7756), xytext=(1, 0.7),
            arrowprops=dict(facecolor='black', shrink=0.01),
            )
ax.legend(loc=(0.6,0.2))

props = dict(boxstyle=None, facecolor='wheat', alpha=0.5)
plt.show()
